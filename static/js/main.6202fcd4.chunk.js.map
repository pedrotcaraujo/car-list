{"version":3,"sources":["constants/OrderFilterConstant.js","stores/dataSubject.js","components/Filter/index.js","components/CarList/sortBy.js","components/CarList/useListAll.js","components/CarList/useListVendors.js","components/CarList/index.js","components/Itinerary/index.js","components/Itinerary/useRentalCore.js","components/CarListTabs/index.js","pages/CarListPage.js","components/Car/index.js","components/Car/useCarByID.js","pages/CarPage.js","serviceWorker.js","index.js","App.js"],"names":["Object","freeze","PRICE","BAGGAGE_QUANTITY","VehVendorAvails","data","VehAvailRSCore","map","VehVendor","VehAvails","car","index","ID","crypto","MD5","Vehicle","VehMakeModel","Vendor","VehRentalCore","BehaviorSubject","order","OrderFilterConstant","vehAvailRSCore","Filters","useState","setData","useEffect","subscription","dataSubject","subscribe","unsubscribe","className","OrderFilter","value","onChange","event","next","target","props","keys","name","key","type","checked","a","b","TotalCharge","useCarsByOrder","cars","setCars","handlePayload","flatMap","forEach","sortedCars","sort","sortBy","useListVendors","vehVendorAvails","setVehVendorAvails","sortedVehVendorAvails","item","CarList","showAll","CarListAll","CarListVendors","CarBlock","id","status","vehicle","vendor","totalCharge","useListAll","to","src","PictureURL","alt","width","Itinerary","vehRentalCore","setVehRentalCore","useRentalCore","PickUpLocation","moment","format","ReturnLocation","TabGroup","children","TabItem","CarListPage","path","Car","setCar","some","currentCar","find","c","useCarByID","CarPage","useParams","Boolean","window","location","hostname","match","ReactDOM","render","exact","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"spLAAeA,G,MAAAA,OAAOC,OAAO,CACzBC,MAAO,QACPC,iBAAkB,sB,+PCGtB,IAAMC,EAAkBC,EAAK,GAAGC,eAAeF,gBAAgBG,KAW/D,SAAsBC,GAClB,IAAMC,EAAYD,EAAUC,UAAUF,KAAI,SAACG,EAAKC,GAAN,O,yWAAA,IAC/BD,EAD+B,CAElCE,GAAG,GAAD,OAAKC,IAAOC,IAAIJ,EAAIK,QAAQC,aAAa,WAAzC,OAAqDL,QAG/D,MAAO,CACHM,OAAQT,EAAUS,OAClBR,gBAlBFS,EAAgBb,EAAK,GAAGC,eAAeY,cAE9B,MAAIC,IAAgB,CAC/BC,MAAOC,EAAoBnB,MAC3BoB,eAAgB,CACZJ,gBACAd,qB,8NCLO,SAASmB,IAAW,IAAD,EACNC,qBADM,mBACvBnB,EADuB,KACjBoB,EADiB,KAExBL,EAAQf,EAAOA,EAAKe,MAAQC,EAAoBnB,MAatD,OAXAwB,qBAAU,WACN,IAAMC,EAAeC,EAAYC,WAAU,SAACxB,GACxCoB,EAAQpB,MAEZ,OAAO,kBAAMsB,EAAaG,iBAC3B,IAOC,yBAAKC,UAAU,UACX,yBAAKA,UAAU,aACX,kBAACC,EAAD,CAAaC,MAAOb,EAAOc,SAPvC,SAAsBC,GAClBP,EAAYQ,K,yWAAZ,IAAqB/B,EAArB,CAA2Be,MAAOe,EAAME,OAAOJ,cAYvD,SAASD,EAAYM,GAAQ,IAClBL,EAAmBK,EAAnBL,MAAOC,EAAYI,EAAZJ,SAEd,OACI,yBAAKH,UAAU,eACX,uBAAGA,UAAU,qBAAb,UACA,wBAAIA,UAAU,oBACT/B,OAAOuC,KAAKlB,GAAqBd,KAAI,SAACiC,GAAD,OAClC,wBAAIT,UAAU,mBAAmBU,IAAKD,GAClC,+BACI,2BACIE,KAAK,QACLT,MAAOZ,EAAoBmB,GAC3BG,QAASV,IAAUZ,EAAoBmB,GACvCN,SAAUA,IAEd,8BAAOb,EAAoBmB,W,UC/CxC,GACXtC,MAAO,SAAC0C,EAAGC,GAAJ,OACHD,EAAEE,YAAY,oBAAsBD,EAAEC,YAAY,qBAEtD3C,iBAAkB,SAACyC,EAAGC,GAClB,OAAID,EAAE7B,QAAQ,oBAAsB8B,EAAE9B,QAAQ,qBAClC,EACD6B,EAAE7B,QAAQ,oBAAsB8B,EAAE9B,QAAQ,oBAC1C,EAEA,I,8NCLJ,SAASgC,IAAkB,IAAD,EACbvB,qBADa,mBAC9BwB,EAD8B,KACxBC,EADwB,KAGrC,SAASC,EAAT,GAAiD,IAAzB5B,EAAwB,EAAxBA,eAAgBF,EAAQ,EAARA,MAC9B4B,EAAO1B,EAAelB,gBACvB+C,SAAQ,SAAC/C,GAAD,OACLA,EAAgBK,UAAUF,KAAI,SAACG,GAAD,O,yWAAA,IACvBA,EADuB,CAE1BO,OAAQb,EAAgBa,eAIpCjB,OAAOuC,KAAKlB,GAAqB+B,SAAQ,SAACZ,GACtC,GAAInB,EAAoBmB,KAAUpB,EAAO,CACrC,IAAMiC,EAAaL,EAAKM,KAAKC,EAAOf,IACpCS,EAAQI,OAUpB,OALA3B,qBAAU,WACN,IAAMC,EAAeC,EAAYC,UAAUqB,GAC3C,OAAO,kBAAMvB,EAAaG,iBAC3B,IAEIkB,E,8NCzBI,SAASQ,IAAkB,IAAD,EACShC,qBADT,mBAC9BiC,EAD8B,KACbC,EADa,KAGrC,SAASR,EAAT,GAAiD,IAAzB5B,EAAwB,EAAxBA,eAAgBF,EAAQ,EAARA,MAC9BqC,EAAkBnC,EAAelB,gBAEvCJ,OAAOuC,KAAKlB,GAAqB+B,SAAQ,SAACZ,GACtC,GAAInB,EAAoBmB,KAAUpB,EAAO,CACrC,IAAMuC,EAAwBF,EAAgBlD,KAAI,SAACqD,GAC/C,O,yWAAO,IAAIA,EAAX,CAAiBnD,UAAWmD,EAAKnD,UAAU6C,KAAKC,EAAOf,SAE3DkB,EAAmBC,OAU/B,OALAjC,qBAAU,WACN,IAAMC,EAAeC,EAAYC,UAAUqB,GAC3C,OAAO,kBAAMvB,EAAaG,iBAC3B,IAEI2B,ECpBI,SAASI,EAAQvB,GAAQ,IAC5BwB,EAAYxB,EAAZwB,QAER,OACI,6BAAS/B,UAAU,WACf,yBAAKA,UAAU,aACV+B,EAAU,kBAACC,EAAD,MAAiB,kBAACC,EAAD,QAM5C,SAASA,IACL,IAAMP,EAAkBD,IACxB,OACI,oCACKC,GAAmBA,EAAgBlD,KAAI,SAACqD,GAAD,OACpC,6BAASnB,IAAKmB,EAAK3C,OAAO,SAAUc,UAAU,mBAC1C,wBAAIA,UAAU,wBAAwB6B,EAAK3C,OAAO,UAClD,yBAAKc,UAAU,iBACV6B,EAAKnD,UAAUF,KAAI,SAACG,GAAD,OAChB,kBAACuD,EAAD,CACIxB,IAAK/B,EAAG,GACRwD,GAAIxD,EAAG,GACPyD,OAAQzD,EAAI,WACZ0D,QAAS1D,EAAG,QACZ2D,OAAQT,EAAI,OACZU,YAAa5D,EAAG,uBAUhD,SAASqD,IACL,IAAMf,EAAOuB,IACb,OACI,yBAAKxC,UAAU,iBACViB,GAAQA,EAAKzC,KAAI,SAACG,GAAD,OACd,kBAACuD,EAAD,CACIxB,IAAK/B,EAAG,GACRwD,GAAIxD,EAAG,GACPyD,OAAQzD,EAAI,WACZ0D,QAAS1D,EAAG,QACZ2D,OAAQ3D,EAAG,OACX4D,YAAa5D,EAAG,kBAOpC,SAASuD,EAAS3B,GAAQ,IACd8B,EAAoC9B,EAApC8B,QAASE,EAA2BhC,EAA3BgC,YAAaD,EAAc/B,EAAd+B,OAAQH,EAAM5B,EAAN4B,GACtC,OACI,yBAAKnC,UAAU,YACX,kBAAC,IAAD,CAAMA,UAAU,gBAAgByC,GAAE,wBAAmBN,IACjD,gCACI,yBACInC,UAAU,eACV0C,IAAKL,EAAQM,WAAYC,IAAKP,EAAQpD,aAAa,SACnD4D,MAAM,SAGd,yBAAK7C,UAAU,oBACX,wBAAIA,UAAU,iBAAiBqC,EAAQpD,aAAa,UACpD,yBAAKe,UAAU,iBACX,0BAAMA,UAAU,sCACXsC,EAAO,UAEZ,0BAAMtC,UAAU,sBACXqC,EAAQ,cAEb,0BAAMrC,UAAU,sBAAhB,cACgBqC,EAAQ,uBAExB,0BAAMrC,UAAU,sBAAhB,YACcqC,EAAQ,qBAEtB,yBAAKrC,UAAU,kBACVuC,EAAY,yB,2BCpF1B,SAASO,IACpB,IAAMC,ECHK,WAA2B,IAAD,EACKtD,qBADL,mBAC9BsD,EAD8B,KACfC,EADe,KAGrC,SAAS7B,EAAT,GAA0C,IAAlB5B,EAAiB,EAAjBA,eACpByD,EAAiBzD,EAAeJ,eAQpC,OALAQ,qBAAU,WACN,IAAMC,EAAeC,EAAYC,UAAUqB,GAC3C,OAAO,kBAAMvB,EAAaG,iBAC3B,IAEIgD,EDTeE,GACtB,OACI,yBAAKjD,UAAU,aACV+C,GACG,yBAAK/C,UAAU,aACX,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,oBACX,0BAAMA,UAAU,kBAAhB,mBAEI,8BAAO+C,EAAcG,eAAe,WAExC,0BAAMlD,UAAU,kBAAhB,mBAEI,8BACKmD,IAAOJ,EAAc,oBAAoBK,OAAO,gBAI7D,yBAAKpD,UAAU,oBACX,0BAAMA,UAAU,kBAAhB,mBAEI,8BAAO+C,EAAcM,eAAe,WAExC,0BAAMrD,UAAU,kBAAhB,mBAEI,8BACKmD,IAAOJ,EAAc,oBAAoBK,OAAO,mB,ME7B9E,SAASE,EAAS/C,GAAQ,IACrBgD,EAAahD,EAAbgD,SACR,OACI,yBAAKvD,UAAU,QACX,yBAAKA,UAAU,aACX,wBAAIA,UAAU,YACTuD,KAOd,SAASC,EAAQjD,GAAQ,IACpBgD,EAAahD,EAAbgD,SACR,OACI,wBAAIvD,UAAU,WAAWuD,GCRlB,SAASE,IACpB,OACI,oCACI,kBAACH,EAAD,KACI,kBAACE,EAAD,KACI,kBAAC,IAAD,CAAMf,GAAG,aAAT,QAEJ,kBAACe,EAAD,KACI,kBAAC,IAAD,CAAMf,GAAG,qBAAT,aAGR,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOiB,KAAK,qBACR,kBAAC,EAAD,MACA,kBAACZ,EAAD,MACA,kBAAChB,EAAD,CAASC,SAAS,KAEtB,kBAAC,IAAD,CAAO2B,KAAK,aACR,kBAAC,EAAD,MACA,kBAACZ,EAAD,MACA,kBAAChB,EAAD,CAASC,SAAS,O,MCzBvB,SAAS4B,EAAIpD,GAAQ,IAE1B5B,ECLK,SAAoBwD,GAAK,IAAD,EACb1C,qBADa,mBAC5Bd,EAD4B,KACvBiF,EADuB,KAwBnC,OArBAjE,qBAAU,WAiBN,IAAMC,EAAeC,EAAYC,WAhBjC,YAAyC,EAAjBP,eACmBlB,gBACvBwF,MAAK,SAAAhC,GACjB,IAAMiC,EAAajC,EAAKnD,UAAUqF,MAAK,SAAAC,GACnC,OAAOA,EAAEnF,KAAOsD,KAGpB,QAAI2B,IACAA,EAAU,OAAajC,EAAK3C,OAC5B0E,EAAOE,IACA,SAOnB,OAAO,kBAAMlE,EAAaG,iBAC3B,CAACoC,IAEGxD,EDnBMsF,CADE1D,EAAP4B,IAER,OACI,yBAAKnC,UAAU,aACVrB,GACA,yBAAKqB,UAAU,OACZ,gCACI,yBACIA,UAAU,UACV0C,IAAK/D,EAAIK,QAAQ2D,WAAYC,IAAKjE,EAAIK,QAAQC,aAAa,YAGnE,yBAAKe,UAAU,eACX,wBAAIA,UAAU,YAAYrB,EAAIK,QAAQC,aAAa,UACnD,wBAAIe,UAAU,YACV,sCACA,4BAAKrB,EAAIO,OAAO,UAEhB,yCACA,4BAAKP,EAAIK,QAAQ,cAEjB,yCACA,4BAAKL,EAAIK,QAAQ,uBAEjB,gDACA,4BAAKL,EAAIK,QAAQ,qBAEjB,qCACA,4BAAKL,EAAIoC,YAAY,uBAG7B,kBAAC,IAAD,CAAM0B,GAAG,aAAT,UElCD,SAASyB,IAAW,IACvB/B,EAAOgC,cAAPhC,GACR,OACI,kBAACwB,EAAD,CAAKxB,GAAIA,ICKGiC,QACW,cAA7BC,OAAOC,SAASC,UAEe,UAA7BF,OAAOC,SAASC,UAEhBF,OAAOC,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,mBCQD,WACb,OACE,kBAAC,IAAD,KACI,4BAAQ1E,UAAU,cACd,yBAAKA,UAAU,aACX,yBAAKA,UAAU,kBACX,kBAAC,IAAD,CAAMA,UAAU,sBAAsByC,GAAG,aAAzC,0BAId,6BACI,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAOiB,KAAK,qBACV,kBAACQ,EAAD,OAEF,kBAAC,IAAD,CAAOR,KAAK,aACV,kBAACD,EAAD,OAEF,kBAAC,IAAD,CAAOkB,OAAK,EAACjB,KAAK,KAChB,kBAAC,IAAD,CAAUjB,GAAG,oBD3BX,MAASmC,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.6202fcd4.chunk.js","sourcesContent":["export default Object.freeze({\n    PRICE: 'Price',\n    BAGGAGE_QUANTITY: 'Baggage Quantity'\n})","import {BehaviorSubject} from 'rxjs';\nimport crypto from 'crypto-js'\nimport data from '../data.json';\nimport OrderFilterConstant from '../constants/OrderFilterConstant';\n\nconst VehVendorAvails = data[0].VehAvailRSCore.VehVendorAvails.map(createCarIDs)\nconst VehRentalCore = data[0].VehAvailRSCore.VehRentalCore\n\nexport default new BehaviorSubject({\n    order: OrderFilterConstant.PRICE,\n    vehAvailRSCore: {\n        VehRentalCore,\n        VehVendorAvails\n    }\n})\n\nfunction createCarIDs(VehVendor) {\n    const VehAvails = VehVendor.VehAvails.map((car, index) => (\n        {   ...car, \n            ID: `${crypto.MD5(car.Vehicle.VehMakeModel['@Name'])}${index}`\n        }\n    ))\n    return {\n        Vendor: VehVendor.Vendor,\n        VehAvails\n     }\n}","import React, {useState, useEffect} from 'react';\nimport './style.css'\n\nimport OrderFilterConstant from '../../constants/OrderFilterConstant';\nimport dataSubject from '../../stores/dataSubject';\n\n\nexport default function Filters() {\n    const [data, setData] = useState()\n    const order = data ? data.order : OrderFilterConstant.PRICE\n\n    useEffect(() => {\n        const subscription = dataSubject.subscribe((data) => {\n            setData(data)\n        })\n        return () => subscription.unsubscribe()\n    }, [])\n\n    function handleChange(event) {\n        dataSubject.next({...data, order: event.target.value})\n    }\n\n    return (\n        <div className=\"Filter\">\n            <div className=\"container\">\n                <OrderFilter value={order} onChange={handleChange} />\n            </div>\n        </div>\n    )\n}\n\nfunction OrderFilter(props) {\n    const {value, onChange} = props\n\n    return (\n        <div className=\"OrderFilter\">\n            <p className=\"OrderFilter-title\">Order:</p>\n            <ul className=\"OrderFilter-list\">\n                {Object.keys(OrderFilterConstant).map((name) => (\n                    <li className=\"OrderFilter-item\" key={name}>\n                        <label>\n                            <input\n                                type=\"radio\"\n                                value={OrderFilterConstant[name]}\n                                checked={value === OrderFilterConstant[name]}\n                                onChange={onChange}\n                            />\n                            <span>{OrderFilterConstant[name]}</span>\n                        </label>\n                    </li> \n                ))}\n            </ul>\n        </div>\n    )\n}","export default {\n    PRICE: (a, b) => (\n        a.TotalCharge['@RateTotalAmount'] - b.TotalCharge['@RateTotalAmount']\n    ),\n    BAGGAGE_QUANTITY: (a, b) => {\n        if (a.Vehicle['@BaggageQuantity'] > b.Vehicle['@BaggageQuantity']) {\n            return -1\n        } else if (a.Vehicle['@BaggageQuantity'] < b.Vehicle['@BaggageQuantity']) {\n            return 1;\n        } else {\n            return 0\n        }\n    }\n}","import { useEffect, useState } from 'react';\nimport dataSubject from '../../stores/dataSubject'\nimport OrderFilterConstant from '../../constants/OrderFilterConstant';\nimport sortBy from './sortBy';\n\nexport default function useCarsByOrder() {\n    const [cars, setCars] = useState()\n\n    function handlePayload({vehAvailRSCore, order}) {\n        const cars = vehAvailRSCore.VehVendorAvails\n            .flatMap((VehVendorAvails) => (\n                VehVendorAvails.VehAvails.map((car) => ({\n                    ...car, \n                    Vendor: VehVendorAvails.Vendor\n                }))\n            ))\n\n        Object.keys(OrderFilterConstant).forEach((name) => {\n            if (OrderFilterConstant[name] === order) {\n                const sortedCars = cars.sort(sortBy[name])\n                setCars(sortedCars)\n            }\n        })\n    }\n\n    useEffect(() => {\n        const subscription = dataSubject.subscribe(handlePayload)\n        return () => subscription.unsubscribe()\n    }, [])\n\n    return cars\n}\n\n\n","import { useEffect, useState } from 'react';\nimport dataSubject from '../../stores/dataSubject'\nimport OrderFilterConstant from '../../constants/OrderFilterConstant';\nimport sortBy from './sortBy';\n\nexport default function useListVendors() {\n    const [vehVendorAvails, setVehVendorAvails] = useState()\n\n    function handlePayload({vehAvailRSCore, order}) {\n        const vehVendorAvails = vehAvailRSCore.VehVendorAvails\n\n        Object.keys(OrderFilterConstant).forEach((name) => {\n            if (OrderFilterConstant[name] === order) {\n                const sortedVehVendorAvails = vehVendorAvails.map((item) => {         \n                    return {...item, VehAvails: item.VehAvails.sort(sortBy[name])}\n                })\n                setVehVendorAvails(sortedVehVendorAvails)\n            }\n        })\n    }\n\n    useEffect(() => {\n        const subscription = dataSubject.subscribe(handlePayload)\n        return () => subscription.unsubscribe()\n    }, [])\n\n    return vehVendorAvails\n}\n\n\n","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './style.css';\nimport useListAll from './useListAll';\nimport useListVendors from './useListVendors';\n\nexport default function CarList(props) {\n    const { showAll } = props\n\n    return (\n        <section className=\"CarList\">\n            <div className=\"container\">\n                {showAll ? <CarListAll /> : <CarListVendors /> }\n            </div>\n        </section>\n    )\n}\n\nfunction CarListVendors() {\n    const vehVendorAvails = useListVendors()\n    return (\n        <>\n            {vehVendorAvails && vehVendorAvails.map((item) => (\n                <section key={item.Vendor['@Code']} className=\"CarList-section\">\n                    <h2 className=\"CarList-section-name\">{item.Vendor['@Name']}</h2>\n                    <div className=\"CarList-items\">\n                        {item.VehAvails.map((car) => (\n                            <CarBlock\n                                key={car['ID']}\n                                id={car['ID']}\n                                status={car['@Status']}\n                                vehicle={car['Vehicle']}\n                                vendor={item['Vendor']}\n                                totalCharge={car['TotalCharge']}\n                            />\n                        ))}\n                    </div>\n                </section>\n            ))}\n        </>\n    )\n}\n\nfunction CarListAll() {\n    const cars = useListAll()\n    return (\n        <div className=\"CarList-items\">\n            {cars && cars.map((car) => (\n                <CarBlock\n                    key={car['ID']}\n                    id={car['ID']}\n                    status={car['@Status']}\n                    vehicle={car['Vehicle']}\n                    vendor={car['Vendor']}\n                    totalCharge={car['TotalCharge']}\n                />\n            ))}\n        </div>\n    )\n}\n\nfunction CarBlock(props) {\n    const { vehicle, totalCharge, vendor, id} = props;\n    return (\n        <div className=\"CarBlock\">\n            <Link className=\"CarBlock-link\" to={`/car-list/car/${id}`}>\n                <figure>\n                    <img\n                        className=\"CarBlock-img\"\n                        src={vehicle.PictureURL} alt={vehicle.VehMakeModel['@Name']}\n                        width=\"300\"\n                    />\n                </figure>\n                <div className=\"CarBlock-details\">\n                    <h3 className=\"CarBlock-name\">{vehicle.VehMakeModel['@Name']}</h3>\n                    <div className=\"CarBlock-info\">                        \n                        <span className=\"CarBlock-info-item CarBlock-vendor\">\n                            {vendor['@Name']}\n                        </span>\n                        <span className=\"CarBlock-info-item\">\n                            {vehicle['@FuelType']}\n                        </span>\n                        <span className=\"CarBlock-info-item\">\n                            Passenger: {vehicle['@PassengerQuantity']}\n                        </span>\n                        <span className=\"CarBlock-info-item\">\n                            Baggage: {vehicle['@BaggageQuantity']}\n                        </span>\n                        <div className=\"CarBlock-price\">\n                            {totalCharge['@RateTotalAmount']}\n                        </div>\n                    </div>\n                </div>\n            </Link>\n        </div>\n    )\n}\n","import React from 'react'\nimport moment from 'moment';\nimport './style.css'\nimport useRentalCore from './useRentalCore'\n\nexport default function Itinerary() {\n    const vehRentalCore = useRentalCore()\n    return (\n        <div className=\"Itinerary\">\n            {vehRentalCore && (\n                <div className=\"container\">\n                    <div className=\"Itinerary-details\">\n                        <div className=\"Itinerary-pickup\">\n                            <span className=\"Itinerary-info\">\n                                Pickup Location:\n                                <span>{vehRentalCore.PickUpLocation['@Name']}</span>\n                            </span>\n                            <span className=\"Itinerary-info\">\n                                Pickup Datetime:\n                                <span>\n                                    {moment(vehRentalCore['@PickUpDateTime']).format(\"MMM Do YY\")}\n                                </span>\n                            </span>\n                        </div>\n                        <div className=\"Itinerary-return\">\n                            <span className=\"Itinerary-info\">\n                                Return Location:\n                                <span>{vehRentalCore.ReturnLocation['@Name']}</span>\n                            </span>\n                            <span className=\"Itinerary-info\">\n                                Return Datetime:\n                                <span>\n                                    {moment(vehRentalCore['@ReturnDateTime']).format(\"MMM Do YY\")}\n                                </span>\n                            </span>\n                        </div>\n                    </div>\n                </div>\n            )}\n        </div>\n    )\n}","import { useEffect, useState } from 'react';\nimport dataSubject from '../../stores/dataSubject'\n\nexport default function useCarsByOrder() {\n    const [vehRentalCore, setVehRentalCore] = useState()\n\n    function handlePayload({vehAvailRSCore}) {\n        setVehRentalCore(vehAvailRSCore.VehRentalCore)\n    }\n\n    useEffect(() => {\n        const subscription = dataSubject.subscribe(handlePayload)\n        return () => subscription.unsubscribe()\n    }, [])\n\n    return vehRentalCore\n}\n\n\n","import React from 'react';\nimport './style.css';\n\nexport function TabGroup(props) {\n    const { children } = props;\n    return (\n        <div className=\"Tabs\">\n            <div className=\"container\">\n                <ul className=\"TabGroup\">\n                    {children}\n                </ul>\n            </div>\n        </div>\n    )\n}\n\nexport function TabItem(props) {\n    const { children } = props;\n    return (\n        <li className=\"TabItem\">{children}</li>\n    )\n}","import React from 'react';\nimport {\n    Switch,\n    Route,\n    Link\n  } from \"react-router-dom\";\nimport Filter from '../components/Filter';\nimport CarList from '../components/CarList';\nimport Itinerary from '../components/Itinerary';\nimport { TabGroup, TabItem } from '../components/CarListTabs'\n\nexport default function CarListPage() {\n    return (\n        <>\n            <TabGroup>\n                <TabItem>\n                    <Link to=\"/car-list\">All</Link>\n                </TabItem>\n                <TabItem>\n                    <Link to=\"/car-list/vendors\">Vendors</Link>\n                </TabItem>\n            </TabGroup>\n            <Switch>\n                <Route path=\"/car-list/vendors\">\n                    <Filter/>\n                    <Itinerary />\n                    <CarList showAll={false}/>\n                </Route>\n                <Route path=\"/car-list\">\n                    <Filter/>\n                    <Itinerary />\n                    <CarList showAll={true}/>\n                </Route>\n            </Switch>\n        </>\n    )\n}","import React from 'react';\nimport {Link} from \"react-router-dom\";\nimport './style.css'\nimport useCarByID from './useCarByID';\n\n\nexport default function Car(props) {\n    const { id } = props;\n    const car  = useCarByID(id)\n    return (\n        <div className=\"container\">\n            {car && (\n             <div className=\"Car\">\n                <figure>\n                    <img\n                        className=\"Car-img\"\n                        src={car.Vehicle.PictureURL} alt={car.Vehicle.VehMakeModel['@Name']}\n                    />\n                </figure>\n                <div className=\"Car-details\">\n                    <h2 className=\"Car-name\">{car.Vehicle.VehMakeModel['@Name']}</h2>\n                    <dl className=\"Car-info\">\n                        <dt>Vendor</dt>\n                        <dd>{car.Vendor['@Name']}</dd>\n\n                        <dt>Fuel Type</dt>\n                        <dd>{car.Vehicle['@FuelType']}</dd>\n\n                        <dt>Passenger</dt>\n                        <dd>{car.Vehicle['@PassengerQuantity']}</dd>\n\n                        <dt>Baggage Quantity</dt>\n                        <dd>{car.Vehicle['@BaggageQuantity']}</dd>\n                        \n                        <dt>Price</dt>\n                        <dd>{car.TotalCharge['@RateTotalAmount']}</dd>\n                    </dl>\n                </div>\n                <Link to='/car-list'>Back</Link>\n            </div>\n            )}\n            \n        </div>\n    )\n}","import { useEffect, useState } from 'react';\nimport dataSubject from '../../stores/dataSubject'\n\nexport default function useCarByID(id) {\n    const [car, setCar] = useState();\n\n    useEffect(() => {\n        function handlePayload({vehAvailRSCore}) {\n            const vehVendorAvails = vehAvailRSCore.VehVendorAvails\n            vehVendorAvails.some(item => {\n                const currentCar = item.VehAvails.find(c => {\n                    return c.ID === id\n                })\n\n                if (currentCar) {\n                    currentCar['Vendor'] = item.Vendor\n                    setCar(currentCar)\n                    return true\n                } else {\n                    return false\n                }\n            })    \n        }\n        const subscription = dataSubject.subscribe(handlePayload)\n        return () => subscription.unsubscribe()\n    }, [id])\n\n    return car\n}","import React from 'react';\nimport { useParams} from \"react-router-dom\";\nimport Car from '../components/Car';\n\nexport default function CarPage() {\n    const { id } = useParams()\n    return (\n        <Car id={id} />\n    )\n}","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import React from 'react';\nimport {\n  BrowserRouter as Router,\n  Switch,\n  Route,\n  Redirect,\n  Link\n} from \"react-router-dom\";\nimport './App.css'\nimport CarListPage from './pages/CarListPage'\nimport CarPage from './pages/CarPage'\n\n\n\nexport default function App() {\n  return (\n    <Router>\n        <header className=\"App-header\">\n            <div className=\"container\">\n                <div className=\"App-navbarLogo\">\n                    <Link className=\"App-navbarLogo-link\" to=\"/car-list\">CarTrawler Car List</Link>\n                </div>\n            </div>\n        </header>\n      <div>        \n          <Switch>\n            <Route path=\"/car-list/car/:id\">\n              <CarPage/>\n            </Route>\n            <Route path=\"/car-list\">\n              <CarListPage />\n            </Route>\n            <Route exact path=\"/\">\n              <Redirect to=\"/car-list\" />\n            </Route>\n          </Switch>\n      </div>\n    </Router>\n  );\n}"],"sourceRoot":""}